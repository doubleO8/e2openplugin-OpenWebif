{
  "info": {
    "version": "1.2.7x",
    "description": "Enigma2 API",
    "license": {
      "url": "http://www.gnu.org/licenses/gpl-2.0.html",
      "name": "GPL Version 2.0"
    },
    "title": "Enigma2 RESTful API"
  },
  "host": "vulcanus.olymp.sin",
  "paths": {
    "/moviedelete": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Service reference",
            "required": true,
            "type": "string",
            "name": "sRef",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "movie"
        ],
        "summary": "Delete movie on host",
        "operationId": "movie_delete"
      }
    },
    "/epgsearch": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Search term",
            "default": "The Walking Dead",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "search"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "epg"
        ],
        "summary": "Retrieve matching EPG datasets for given search term",
        "operationId": "epgsearch_get"
      }
    },
    "/timerlist": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ],
        "description": "",
        "tags": [
          "timer"
        ],
        "summary": "Retrieve list of available timers on host",
        "operationId": "timerlist_get"
      }
    },
    "/epgbouquet": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Bouquet reference",
            "required": true,
            "type": "string",
            "name": "bRef",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "epg"
        ],
        "summary": "Retrieve EPG dataset for given bouquet",
        "operationId": "epgbouquet_get"
      }
    },
    "/powerstate": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "default": "",
            "description": "New state",
            "type": "string",
            "name": "newstate",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "system"
        ],
        "summary": "Get or set power state",
        "operationId": "powerstate_get"
      }
    },
    "/timerdelete": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Service reference",
            "default": "1:0:19:7C:6:85:FFFF0000:0:0:0:",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "sRef"
          },
          {
            "description": "Timer start",
            "required": true,
            "type": "string",
            "name": "begin",
            "in": "query"
          },
          {
            "description": "Timer end",
            "required": true,
            "type": "string",
            "name": "end",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "timer"
        ],
        "summary": "Delete timer",
        "operationId": "timerdelete_get"
      }
    },
    "/getservices": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ],
        "description": "",
        "tags": [
          "service"
        ],
        "summary": "Retrieve list of available services on host",
        "operationId": "services_get"
      }
    },
    "/getallservices": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ],
        "description": "",
        "tags": [
          "service"
        ],
        "summary": "Retrieve list of all available services on host",
        "operationId": "getallservices_get"
      }
    },
    "/timeradd": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Service reference",
            "default": "1:0:19:7C:6:85:FFFF0000:0:0:0:",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "sRef"
          },
          {
            "description": "Timer start",
            "required": true,
            "type": "string",
            "name": "begin",
            "in": "query"
          },
          {
            "description": "Timer end",
            "required": true,
            "type": "string",
            "name": "end",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "timer"
        ],
        "summary": "Add timer",
        "operationId": "timeradd_get"
      }
    },
    "/subservices": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ],
        "description": "",
        "tags": [
          "service"
        ],
        "summary": "Retrieve list of available subservices on host",
        "operationId": "subservices_get"
      }
    },
    "/about": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ],
        "description": "",
        "tags": [
          "system"
        ],
        "summary": "Retrieve system information",
        "operationId": "about_get"
      }
    },
    "/timeraddbyeventid": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Service reference",
            "default": "1:0:19:7C:6:85:FFFF0000:0:0:0:",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "sRef"
          },
          {
            "description": "Event ID",
            "required": true,
            "type": "string",
            "name": "eventid",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "timer"
        ],
        "summary": "Add timer",
        "operationId": "timeraddbyeventid_get"
      }
    },
    "/zap": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Service reference",
            "default": "1:0:19:7C:6:85:FFFF0000:0:0:0:",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "sRef"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "system"
        ],
        "summary": "Zap to given service",
        "operationId": "zap_get"
      }
    },
    "/messageanswer": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "default": "Hello",
            "description": "Message to display",
            "type": "string",
            "name": "text",
            "in": "query"
          },
          {
            "default": "now",
            "description": "get answer",
            "type": "string",
            "name": "getanswer",
            "in": "query"
          },
          {
            "description": "Message type",
            "format": "int32",
            "default": 0,
            "in": "query",
            "type": "integer",
            "name": "type"
          },
          {
            "description": "Message timeout",
            "format": "int32",
            "default": 10,
            "in": "query",
            "type": "integer",
            "name": "timeout"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "system"
        ],
        "summary": "Display message on screen",
        "operationId": "messageanswer_get"
      }
    },
    "/epgservice": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Service reference",
            "default": "1:0:19:7C:6:85:FFFF0000:0:0:0:",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "sRef"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "epg"
        ],
        "summary": "Retrieve EPG dataset for given service",
        "operationId": "epgservice_get"
      }
    },
    "/getcurrent": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "produces": [
          "application/json"
        ],
        "tags": [
          "epg"
        ],
        "summary": "Retrieve EPG dataset for given service",
        "operationId": "getcurrent_get"
      }
    },
    "/message": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "default": "Hello",
            "description": "Message to display",
            "type": "string",
            "name": "text",
            "in": "query"
          },
          {
            "description": "Message type",
            "format": "int32",
            "default": 1,
            "in": "query",
            "type": "integer",
            "name": "type"
          },
          {
            "description": "Message timeout",
            "format": "int32",
            "default": 10,
            "in": "query",
            "type": "integer",
            "name": "timeout"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "system"
        ],
        "summary": "Display message on screen",
        "operationId": "message_get"
      }
    },
    "/movielist": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "produces": [
          "application/json"
        ],
        "description": "",
        "tags": [
          "movie"
        ],
        "summary": "Retrieve list of available movies on host",
        "operationId": "movielist_get"
      }
    },
    "/api/eventlookup": {
      "get": {
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "description": "",
        "parameters": [
          {
            "description": "Flags",
            "required": false,
            "type": "string",
            "name": "flags",
            "in": "query",
            "default": ""
          },
          {
            "description": "Service reference",
            "default": "1:0:19:7C:6:85:FFFF0000:0:0:0:",
            "required": true,
            "in": "query",
            "type": "string",
            "name": "service_reference"
          },
          {
            "description": "Query Type ID",
            "default": 2,
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "querytype"
          },
          {
            "description": "Event ID",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "event_id"
          },
          {
            "description": "Maximum number of results",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "max_rows",
            "default": 12
          },
          {
            "description": "Time span (minutes)",
            "required": false,
            "in": "query",
            "type": "integer",
            "name": "minutes",
            "default": -1
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "epg",
          "events"
        ],
        "summary": "Retrieve event dataset(s)",
        "operationId": "api_eventlookup_id"
      }
    }
  },
  "basePath": "/api",
  "swagger": "2.0",
  "schemes": [
    "http"
  ]
}